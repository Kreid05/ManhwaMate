if (userInput.trim() === '') return;

    const newUserMessage = { text: userInput, sender: 'user' };
    setMessages((prev) => [...prev, newUserMessage]);
    setUserInput('');

    try {
      const response = await axios.post('http://localhost:5000/api/chatbot', { message: userInput });
      const botResponse = {
        text: response.data.reply,
        sender: 'bot',
      };
      setMessages((prev) => [...prev, botResponse]);
    } catch (error) {
      const errorResponse = {
        text: 'Sorry, there was an error processing your request.',
        sender: 'bot',
      };
      setMessages((prev) => [...prev, errorResponse]);
    }
  };
=======
  const handleSendMessage = async () => {
    if (userInput.trim() === '') return;

    const newUserMessage = { text: userInput, sender: 'user' };
    setMessages((prev) => [...prev, newUserMessage]);
    setUserInput('');

    try {
      // Prepend instruction to restrict chatbot content to Manhwa/Manga/Manhua topics only
      const prompt = "You are a helpful chatbot that only talks about Manhwa, Manga, and Manhua. Please only respond about these topics. User: " + userInput;

      const response = await axios.post('http://localhost:5000/api/chatbot', { message: prompt });
      const botResponse = {
        text: response.data.reply,
        sender: 'bot',
      };
      setMessages((prev) => [...prev, botResponse]);
    } catch (error) {
      const errorResponse = {
        text: 'Sorry, there was an error processing your request.',
        sender: 'bot',
      };
      setMessages((prev) => [...prev, errorResponse]);
    }
  };
